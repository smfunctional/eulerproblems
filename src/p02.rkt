#lang racket
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Project Euler - Problem 2
; 
; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
; with 1 and 2, the first 10 terms will be:
;
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;zogsports.com

; By considering the terms in the Fibonacci sequence whose values do not exceed four million,
; find the sum of the even-valued terms.
;
; Example:
; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; num, func -> num


(define (fib-sum upto criteria)
    (define (h i j acc)
      (if (> i upto) acc
          (h j (+ i j) (if (even? i) (+ i acc) acc))))
    (h 1 2 0))

(fib-sum 4000000 even?)

;Run unit tests
(require rackunit)
;; Given a list of positive integers returns the sum of the multiples of 3 and 5
(check-eq? (fib-sum 4000000 even?) 4613732)
